* TOOD

tood is a simple curses application for managing a todo list.  This is alpha
quality software and I may never need it to be anything more.

The program needs to run on my phone.  The easiest way to do this is Python
under Termux.

The list is backed on version control (git) and all operations trigger a
commit, so data loss is unlikely.

** Running it

If you're on a normal operating system that installs in accordance with the
FHS, just do

#+BEGIN_SRC sh
  ./tood.py
#+END_SRC

For mobile deployment, it's a bit more complicated.  It may work with other
things, but I use a Termux system.  This needs both python2 and git installed.
Prior to usage, you'll need to set up git (i.e., set user.name and
user.email); otherwise, the git operations will somewhat mysteriously bomb
out.

However, shebangs won't work right because they require hardcoding paths.  I
recommend defining an alias for this:

#+BEGIN_SRC sh
  echo >> ~/.bashrc <<EOF
  function t() {
      cd ~/tood
      python tood.py
  }
  EOF
  source ~/.bashrc
#+END_SRC

which, while a lot to type, does mean that you can just run it with a single
letter in the future.

** Files

*** tood.py

This is the main program.  Run this; press =h= or =?= for help.

*** debuglisten.py

This is a simple event listener for curses.  It's useful for determining what
"keys" curses presents in response to various actions.

** Rejected ideas

*** Use a better language

Originally I wanted to do this in Rust, but it's not available for Termux
(yet?).

*** Use a git library

Actually tried this one; removed it in
ce75f9b25eab8f26fc52875e3237d9057dc738a8.  Neither GitPython nor virtualenv
are packaged for Termux.
